{"ast":null,"code":"import _objectSpread from \"/Users/mas.kimura/react/pro-react-16/01 - Your First React Application/todo/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/mas.kimura/react/pro-react-16/01 - Your First React Application/todo/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/mas.kimura/react/pro-react-16/01 - Your First React Application/todo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/mas.kimura/react/pro-react-16/01 - Your First React Application/todo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mas.kimura/react/pro-react-16/01 - Your First React Application/todo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mas.kimura/react/pro-react-16/01 - Your First React Application/todo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mas.kimura/react/pro-react-16/01 - Your First React Application/todo/src/App.js\";\nimport React, { Component } from 'react';\nimport { TodoBanner } from \"./TodoBanner\";\nimport { TodoCreator } from \"./TodoCreator\";\nimport { TodoRow } from \"./TodoRow\";\nimport { VisibilityControl } from \"./VisibilityControl\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.updateNewTextValue = function (event) {\n      _this.setState({\n        newItemText: event.target.value\n      });\n    };\n\n    _this.createNewTodo = function (task) {\n      if (!_this.state.todoItems.find(function (item) {\n        return item.action === task;\n      })) {\n        _this.setState({\n          todoItems: [].concat(_toConsumableArray(_this.state.todoItems), [{\n            action: task,\n            done: false\n          }])\n        }, function () {\n          return localStorage.setItem(\"todos\", JSON.stringify(_this.state));\n        });\n      }\n    };\n\n    _this.toggleTodo = function (todo) {\n      return _this.setState({\n        todoItems: _this.state.todoItems.map(function (item) {\n          return item.action === todo.action ? _objectSpread({}, item, {\n            done: !item.done\n          }) : item;\n        })\n      });\n    };\n\n    _this.todoTableRows = function (doneValue) {\n      return _this.state.todoItems.filter(function (item) {\n        return item.done === doneValue;\n      }).map(function (item) {\n        return React.createElement(TodoRow, {\n          key: item.action,\n          item: item,\n          callback: _this.toggleTodo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        });\n      });\n    };\n\n    _this.componentDidMount = function () {\n      var data = localStorage.getItem(\"todos\");\n\n      _this.setState(data != null ? JSON.parse(data) : {\n        userName: \"Adam\",\n        todoItems: [{\n          action: \"Buy Flowers\",\n          done: false\n        }, {\n          action: \"Get Shoes\",\n          done: false\n        }, {\n          action: \"Collect Tickets\",\n          done: true\n        }, {\n          action: \"Call Joe\",\n          done: false\n        }],\n        showCompleted: true\n      });\n    };\n\n    _this.render = function () {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(TodoBanner, {\n        name: _this.state.userName,\n        tasks: _this.state.todoItems,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(TodoCreator, {\n        callback: _this.createNewTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"table\", {\n        className: \"table table-striped table-bordered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Done\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, _this.todoTableRows(false))), React.createElement(\"div\", {\n        className: \"bg-secondary text-white text-center p-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(VisibilityControl, {\n        description: \"Completed Tasks\",\n        isChecked: _this.state.showCompleted,\n        callback: function callback(checked) {\n          return _this.setState({\n            showCompleted: checked\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })), _this.state.showCompleted && React.createElement(\"table\", {\n        className: \"table table-striped table-bordered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Done\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, _this.todoTableRows(true)))));\n    };\n\n    _this.state = {\n      userName: \"Adam\",\n      todoItems: [{\n        action: \"Buy Flowers\",\n        done: false\n      }, {\n        action: \"Get Shoes\",\n        done: false\n      }, {\n        action: \"Collect Tickets\",\n        done: true\n      }, {\n        action: \"Call Joe\",\n        done: false\n      }],\n      showCompleted: true\n    };\n    return _this;\n  }\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["/Users/mas.kimura/react/pro-react-16/01 - Your First React Application/todo/src/App.js"],"names":["React","Component","TodoBanner","TodoCreator","TodoRow","VisibilityControl","App","props","updateNewTextValue","event","setState","newItemText","target","value","createNewTodo","task","state","todoItems","find","item","action","done","localStorage","setItem","JSON","stringify","toggleTodo","todo","map","todoTableRows","doneValue","filter","componentDidMount","data","getItem","parse","userName","showCompleted","render","checked"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { TodoBanner } from \"./TodoBanner\";\nimport { TodoCreator } from \"./TodoCreator\";\nimport { TodoRow } from \"./TodoRow\";\nimport { VisibilityControl } from \"./VisibilityControl\";\n\nexport default class App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            userName: \"Adam\",\n            todoItems: [{ action: \"Buy Flowers\", done: false },\n                        { action: \"Get Shoes\", done: false },\n                        { action: \"Collect Tickets\", done: true },\n                        { action: \"Call Joe\", done: false }],\n            showCompleted: true\n        }\n    }\n\n    updateNewTextValue = (event) => {\n        this.setState({ newItemText: event.target.value });\n    }\n\n    createNewTodo = (task) => {\n        if (!this.state.todoItems.find(item => item.action === task)) {\n            this.setState({ \n                todoItems: [...this.state.todoItems, { action: task, done: false }]\n            }, () => localStorage.setItem(\"todos\", JSON.stringify(this.state)));        \n        }\n    }\n\n    toggleTodo = (todo) => this.setState({ todoItems: \n        this.state.todoItems.map(item => item.action === todo.action \n            ? { ...item, done: !item.done } : item) });\n    \n    todoTableRows = (doneValue) => this.state.todoItems\n        .filter(item => item.done === doneValue).map(item => \n            <TodoRow key={ item.action } item={ item } \n                callback={ this.toggleTodo } />)\n         \n\n    componentDidMount = () => {\n        let data = localStorage.getItem(\"todos\");\n        this.setState(data != null \n            ? JSON.parse(data) \n            :  { \n                userName: \"Adam\",\n                todoItems: [{ action: \"Buy Flowers\", done: false },\n                            { action: \"Get Shoes\", done: false },\n                            { action: \"Collect Tickets\", done: true },\n                            { action: \"Call Joe\", done: false }],\n                showCompleted: true    \n            });\n    }\n\n    render = () => \n        <div>\n            <TodoBanner name={ this.state.userName } \n                tasks={this.state.todoItems } />\n            <div className=\"container-fluid\">\n                <TodoCreator callback={ this.createNewTodo } />\n                <table className=\"table table-striped table-bordered\">\n                    <thead>\n                        <tr><th>Description</th><th>Done</th></tr>\n                    </thead>\n                    <tbody>{ this.todoTableRows(false) }</tbody>\n                </table>\n\n                <div className=\"bg-secondary text-white text-center p-2\">\n                    <VisibilityControl description=\"Completed Tasks\" \n                        isChecked={this.state.showCompleted}\n                        callback={ (checked) => \n                            this.setState({ showCompleted: checked })} />\n                </div>  \n\n                { this.state.showCompleted &&                       \n                    <table className=\"table table-striped table-bordered\">\n                        <thead>\n                            <tr><th>Description</th><th>Done</th></tr>\n                        </thead>\n                        <tbody>{ this.todoTableRows(true) }</tbody>\n                    </table>\n                }\n            </div>\n        </div>\n}\n"]},"metadata":{},"sourceType":"module"}